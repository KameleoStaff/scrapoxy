{{- $backendJwtSecret := .Values.backendJwtSecret | required ".Values.backendJwtSecret is required." -}}
{{- $frontendJwtSecret := .Values.frontendJwtSecret | required ".Values.frontendJwtSecret is required." -}}

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
    name: {{ .Release.Name }}-commander
    labels:
        app.kubernetes.io/component: {{ .Release.Name }}-commander
        app.kubernetes.io/instance: {{ .Release.Name }}
spec:
    serviceName: {{ .Release.Name }}-commander
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/instance: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app.kubernetes.io/component: {{ .Release.Name }}-commander
                app.kubernetes.io/instance: {{ .Release.Name }}
{{- with .Values.podAnnotations }}
            annotations:
{{ toYaml . | nindent 16 }}
{{- end }}
        spec:
{{- if .Values.priorityClassName }}
            priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
{{- with .Values.image.pullSecrets }}
            imagePullSecrets:
{{- toYaml . | nindent 16 }}
{{- end }}
{{- with .Values.tolerations }}
            tolerations:
{{- toYaml . | nindent 16 }}
{{- end }}
{{- with .Values.affinity }}
            affinity:
{{- toYaml . | nindent 16 }}
{{- end }}
{{- with .Values.nodeSelector }}
            nodeSelector:
{{- toYaml . | nindent 16 }}
{{- end }}
            restartPolicy: Always

            containers:
                -   name: {{ .Release.Name }}-commander
                    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                    imagePullPolicy: {{ .Values.image.pullPolicy }}
                    args:
{{- with .Values.commander.debugPort }}
                        - "--inspect={{ . }}"
{{- end }}
                        - "scrapoxy.js"
                        - "start"
                        - "-f"
                        - "-c"
                        - "--storage"
                        - "file"
                    ports:
                        -   name: commander
                            containerPort: {{ .Values.commander.port }}
                            protocol: TCP
                        -   name: probe
                            containerPort: 8887
                            protocol: TCP
{{- with .Values.commander.debugPort }}
                        -   name: debug
                            containerPort: {{ . }}
                            protocol: TCP
{{- end }}
                    livenessProbe:
                        httpGet:
                            path: /
                            port: probe
                    readinessProbe:
                        httpGet:
                            path: /
                            port: probe
                    resources:
                        {{- toYaml .Values.commander.resources | nindent 24 }}
                    volumeMounts:
{{- if .Values.configMap }}
                        -   name: {{ .Release.Name }}-configfile
                            mountPath: "/etc/scrapoxy/config.json"
                            subPath: {{ .Values.configMapFilename }}
{{- else }}
                        -   name: {{ .Release.Name }}-confd
                            mountPath: "/etc/scrapoxy"
{{- end }}
                    env:
                        - name: NODE_ENV
                          value: "production"
                        - name: COMMANDER_PORT
                          value: "{{ .Values.commander.port }}"
{{- with .Values.auth.local }}
                        - name: AUTH_LOCAL_USERNAME
                          value: {{ .username }}
                        - name: AUTH_LOCAL_PASSWORD
                          value: {{ .password }}
{{- end }}
{{- with .Values.auth.google }}
                        - name: AUTH_GOOGLE_CLIENT_ID
                          value: {{ .clientId }}
                        - name: AUTH_GOOGLE_CLIENT_SECRET
                          value: {{ .clientSecret }}
{{- end }}
{{- with .Values.auth.github }}
                        - name: AUTH_GITHUB_CLIENT_ID
                          value: {{ .clientId }}
                        - name: AUTH_GITHUB_CLIENT_SECRET
                          value: {{ .clientSecret }}
{{- end }}
                        - name: BACKEND_JWT_SECRET
                          value: {{ $backendJwtSecret }}
                        - name: FRONTEND_JWT_SECRET
                          value: {{ $frontendJwtSecret }}
                        - name: STORAGE_FILE_FILENAME
                          value: "/etc/scrapoxy/config.json"

{{- if .Values.configMap }}
            volumes:
                - name: {{ .Release.Name }}-configfile
                  configMap:
                      name: {{ .Values.configMap }}
{{- else }}
    volumeClaimTemplates:
        -   metadata:
                name: {{ .Release.Name }}-confd
                labels:
                    app.kubernetes.io/component: {{ .Release.Name }}
                    app.kubernetes.io/instance: {{ .Release.Name }}
            spec:
                accessModes:
                    - ReadWriteOnce
                resources:
                    requests:
                        storage: {{ .Values.commander.fileStorageSize}}
                volumeMode: Filesystem
{{- end }}
